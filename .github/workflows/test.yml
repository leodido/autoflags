name: testing

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

permissions:
  contents: read

jobs:
  test:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest]
        go: ['1.24']
        include:
          # Set the minimum Go patch version for the given Go minor
          - go: '1.24'
            GO_VERSION: '~1.24.0'
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out the source code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: ${{ matrix.GO_VERSION }}
          check-latest: true

      - name: Print environment
        id: vars
        run: |
          printf "Using Go at $(which go) (version $(go version))\n"
          printf "\n\nGo environment:\n\n"
          go env
          printf "\n\nSystem environment:\n\n"
          env

      - name: Run tests
        run: |
          PKGS=$(go list ./... | tr '\n' ',')
          echo "mode: atomic" > coverage.out
          go test -v -race -covermode=atomic -coverprofile=lib.cover.out -coverpkg=$PKGS ./...
          (cd examples/full && go test -v -race -covermode=atomic -coverprofile=full.cover.out -coverpkg=$PKGS ./...)
          (cd examples/loginsvc && go test -v -race -covermode=atomic -coverprofile=loginsvc.cover.out -coverpkg=$PKGS ./...)
          cat lib.cover.out | grep -v "mode: atomic" >> coverage.out
          cat examples/full/full.cover.out | grep -v "mode: atomic" >> coverage.out
          cat examples/loginsvc/loginsvc.cover.out | grep -v "mode: atomic" >> coverage.out
          go tool cover -func=coverage.out

      - name: Upload coverage
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        if: github.ref == 'refs/heads/main' && matrix.os == 'ubuntu-latest' && matrix.go == '1.24'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true